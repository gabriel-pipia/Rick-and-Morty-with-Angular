@import "../../../assets/scss/Mixin";
@import "../../../assets/scss/Reset";
@import "../../../assets/scss/_Variable";
aside {
  position: fixed;
  inset: 0;
  visibility: hidden;
  pointer-events: none;
  z-index: 10;
  .Aside__Overlay {
    position: fixed;
    inset: 0;
    background: $color-overlay;
    opacity: 0;
    z-index: -1;
    transition: 0.3s ease-in;
  }
  .Wrapper {
    position: fixed;
    @include display-flex(column, flex-start, stretch, $size-1_5rem);
    top: 0;
    padding: $size-1rem;
    right: -100%;
    bottom: 0;
    background: $bg-color-dark;
    border-left: $size-01rem solid $bg-color-light-dark;
    width: $full-width - 15%;
    max-width: 350px;
    box-shadow: $shadow-shallow;
    transition: 0.3s ease-in;
    z-index: 1;
    .Button-Close__Nav {
      @include primary-button( 40px, 40px, (0 0), (0 0), $small-radius, inherit, $color-white-default, $color-primary);
      margin-right: auto;
      margin-bottom: $size-1rem;
      gap: $size-06rem;
      i {
        font-size: $fs-medium;
        color: $color-white-default;
      }
      span {
        font-size: $fs-medium;
        color: $color-white-default;
      }
    }
    nav {
      @include display-flex(column, flex-start, stretch, $size-1rem);
      a {
        position: relative;
        color: $color-white-default;
        font-weight: $fw-medium;
        font-size: $fs-large;
        width: fit-content;
        i {
          font-size: $fs-medium;
          margin-left: $size-05rem;
        }
        &::before {
          content: "";
          position: absolute;
          top: $full-height;
          left: 0;
          right: 0;
          width: $full-width;
          height: $size-02rem;
          border-radius: $small-radius;
          background: $color-primary;
          box-shadow: $shadow-basic;
          visibility: hidden;
        }
        &:hover {
          color: $color-primary;
        }
        &.active {
          color: $color-primary;
          &::before {
            visibility: visible;
          }
        }
      }
    }
  }
  &.active {
    visibility: visible;
    pointer-events: painted;
    .Aside__Overlay {
      opacity: $opacity-100;
    }
    .Wrapper {
      right: 0;
    }
  }
}
